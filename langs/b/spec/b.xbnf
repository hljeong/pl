<b> ::= <declaration>+;

<declaration> ::= "fn" <function> "\(" <parameter_list>? "\)" <block>;

<parameter_list> ::= <variable> ("," <variable>)*;

<block> ::= <statement> | "{" <statement>* "}";

<statement> ::=

  (<variable> | <array_access>) "=" (<operand> | <expression> | <mem_access> | "alloc" "\(" <operand> "\)" | "free" "\(" <operand> "\)" | "stoi" "\(" <operand> "\)" | <function> "\(" <argument_list>? "\)") ";" |

  ("print" | "printi" | "read") "\(" <operand> "\)" ";" |

  "while" "\(" <expression> "\)" <block> |

  "if" "\(" <expression> "\)" <block> |

  <mem_access> "=" <variable> ";" |

  "return" <operand>? ";" |

  <function> "\(" <argument_list>? "\)" ";";

<argument_list> ::=  <operand> ("," <operand>)*;

<array_access> ::= <variable> "\[" <operand> "\]";

<mem_access> ::= "\[" <variable>  "\+" decimal_integer "\]";

<expression> ::=

  <unary_operator> <operand> |

  <operand> <binary_operator> <operand>;

<operand> ::= <variable> | <string> | <array_access> | decimal_integer;

<unary_operator> ::= "!";

<binary_operator> ::=

  "\+" | "-"  | "\*" | "/"  |

  "%"  | "\|" | "&"  | "\^" |

  "==" | "!=" | ">"  | ">=" |

  "<"  | "<=" | "<<" | ">>";

alias <function> ::= identifier;

alias <variable> ::= identifier;

alias <string> ::= escaped_string;
