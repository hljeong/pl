<xbnf> ::= <production> <definition>*;

<production> ::= <nonterminal> '::=' <body> ';';

<nonterminal> ::= '<' identifier '>';

identifier := /[A-Za-z_][A-Za-z0-9_]*/;

<body> ::= <expression> ('|' <expression>)*;

<expression> ::= (<group> <multiplicity>?)+;

<group> ::= <term> | '(' <body> ')';

<term> ::= <nonterminal> | <terminal>;

<terminal> ::= unescaped_nonempty_string | identifier;

unescaped_nonempty_string := /'{character}+'/;

<multiplicity> ::= '?' | '*' | '+' | decimal_integer;

decimal_integer := /[1-9][0-9]*/;

regex := /\/{regex_group}(\|{regex_group})*\//;

regex_group := /(({unit}(\*|\+|\?)?)+|\({regex}\)(\*|\+|\?)?)/;

unit := /{character}|\[\^?{character_set}+\]/;

character_set := /{character}(\-{character})?|\./;

character := /[A-Za-z0-9_`~!@#$%&=,:;'"<> ]|\\\{|\\\}|\\\||\\\(|\\\)|\\\*|\\\+|\\\?|\\\[|\\\^|\\\]|\\\-|\\\.|\\\\|\\\//;

<definition> ::= <production> | <pattern_definition>;

<pattern_definition> ::= identifier ':=' regex ';';
